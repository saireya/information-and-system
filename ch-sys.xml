<?xml version="1.0" encoding="utf-8"?>
<chapter xml:id="ch-sys">
	<title>システム</title>
	<introduction>
		<p>本章では、対象をシステムとみなして分割する、構造主義に基づく分析について述べる。</p>
		<p><xref ref="sec-sys-bg"/>節で構造主義の背景を述べて構造を定義した上で、<xref ref="sec-sys-def"/>節でシステムを定義する。
		<xref ref="sec-sys-dynamic"/>節では時間の経過に伴うシステムの変化について述べる。
		<xref ref="sec-sys-eg"/>節ではシステムの例を示し、心理や社会、創造など、人間の活動がシステムという統一的な視点で俯瞰できることを述べる。
		<xref ref="sec-sys-decompose"/>節でシステムの分割について述べた上で、<xref ref="sec-sys-autopoiesis"/>節で時間発展に伴うシステムの分化について述べる。</p>
	</introduction>

	<section xml:id="sec-sys-bg">
		<title>構造主義</title>
		<p>この世界に存在する対象は、互いに孤立しているわけではなく、互いに関係し、作用して影響を及ぼすことが多い。
		物質の化学反応や生命の維持、人間の思考、地域やSNSのコミュニティ、政治や経済は、いずれも要素間の相互作用を考慮しなければ、適切に分析できない。</p>
		<p>Lévi-Straussは、要素間の関係を<dfn en="structure">構造</dfn>と呼んだ<xref ref="bib-levi-strauss"/>。
		構造主義では構造を重視し、対象<m>A</m>を要素とその関係からなるシステムとみなし、関係に注目して分析する。</p>
		<definition>
			<title>構造</title>
			<statement>
				集合<m>V = \{ v_i | i = 1, \cdots, n \}</m>の2つの要素<m>v_i, v_j</m>間に関係があるとき、この関係を2要素の組<m>(v_i, v_j)</m>として表す。
				関係の集合<m>E = \{ (v_i, v_j) \}</m>を、集合<m>V</m>の<dfn en="structure">構造</dfn>という。
			</statement>
		</definition>
		<p>構造の表し方には、要素の組として表す以外に、次のように隣接行列を用いる方法もある。</p>
		<definition>
			<title>隣接行列</title>
			<statement>
				集合<m>V = \{ v_i | i = 1, \cdots, n \}</m>の2つの要素<m>v_i, v_j</m>間に関係がある、つまり<m>(v_i, v_j) \in E</m>のとき<m>e_{ij} = 1</m>とし、それ以外のとき<m>e_{ij} = 0</m>とする。
				このとき、<m>e_{ij}</m>を次のように並べた行列<m>\varepsilon = (e_{ij})</m>を、集合<m>V</m>の<dfn>隣接行列</dfn>という。
				<me>\varepsilon = (e_{ij})
					= \begin{pmatrix}
						e_{11} \amp e_{12} \amp \cdots \amp e_{1n} \\
						e_{21} \amp e_{22} \amp \cdots \amp e_{2n} \\
						\vdots           \amp \vdots           \amp \ddots \amp \vdots \\
						e_{n1} \amp e_{n2} \amp \cdots \amp e_{nn} \\
					\end{pmatrix} \ 
					\left( e_{ij} = \begin{cases}
						1 \amp ((v_i, v_j) \in E) \\
						0 \amp ((v_i, v_j) \notin E) \\
					\end{cases} \right)
				</me>
				より一般的に、<m>e_{ij}</m>の値を非負の実数とすることもある。このとき、<m>e_{ij}</m>は関係<m>(v_i, v_j)</m>の大きさや強さ、広さなどを表すことができるので、<m>(v_i, v_j)</m>の<dfn en="capacity">容量</dfn>という。
			</statement>
		</definition>
	</section>

	<section xml:id="sec-sys-def">
		<title>システムの定義</title>
		<p><ruby r="ベルタランフィ">Bertalanffy</ruby><xref ref="bib-bertalanffy"/>によれば、<dfn en="system">システム</dfn>または<ruby r="けい"><dfn>系</dfn></ruby>とは<em>相互に作用しあう要素の集合</em>である。
		システムは、要素の集合<m>V</m>と、要素間の相互作用を表す<m>V</m>の構造<m>E</m>の組<m>S = (V, E)</m>として定義される。</p>
		<definition>
			<title>システム</title>
			<statement>
				要素の集合を<m>V = \{ v_i | i = 1, \cdots, n \}</m>、<m>V</m>の構造を<m>E = \{ e_{ij} | i = 1, \cdots, n; j = 1, \cdots, n; \}</m>としたとき、組<m>(V, E)</m>を<dfn en="system">システム</dfn>または<ruby r="けい"><dfn>系</dfn></ruby>という。
				このとき、<m>V</m>の要素をシステム<m>(V, E)</m>の要素といい、集合<m>E</m>をシステム<m>(V, E)</m>の構造という。
			</statement>
		</definition>
		<note>
			<title>グラフ</title>
			<statement>
				<p>システムのように、点と、2点を結ぶ線の組を<dfn en="graph">グラフ</dfn>という。
				グラフでは、「点」を<dfn strong="0" en="node">節点</dfn>や頂点、「線」を<dfn strong="0" en="edge">枝</dfn>や辺という。
				数学の関数<m>y = f(x)</m>の概形を表す「グラフ」や、理科の実験で測定値に対応する点を繋いだ「グラフ」も、その関数が通る「点」を「線」で結んで表したものなので、ここでいうグラフの一種である。</p>
				<p>グラフは節点と枝のみからなるため、節点の集合を<m>V</m>、枝の集合を<m>E</m>とすれば、グラフは<m>(V, E)</m>と表せる。
				グラフのうち、枝の2つの端点が区別できず、枝に「向き」がないグラフを<dfn en="undirected graph">無向グラフ</dfn>という。
				一方、すべての枝に「向き」があるグラフを<dfn en="directed graph">有向グラフ</dfn>という。</p>
				<p>以上のようなグラフに関する理論はグラフ理論と呼ばれ、ネットワークや送電網の分析など、工学の各方面で応用される。</p>
			</statement>
		</note>

		<!-- TODO: グラフのEとVを具体的に示した図 -->
		<p>集合についての和集合や共通部分と同様に、システムの相等性や、合併、共通部分を定義できる。</p>
		<definition>
			<title>システムの相等・合併・共通部分</title>
			<statement>
				<m>S_1 = (V_1, E_1), S_2 = (V_2, E_2)</m>をシステムとする。
				このとき、
				<ul>
					<li><m>E_1 = E_2</m>であれば、<m>S_1</m>と<m>S_2</m>は同じシステムであるといい、<m>S_1 = S_2</m>と表す。<m>S_1 = S_2</m>でないことを、<m>S_1 \ne S_2</m>と表す。</li>
					<li><m>S_1 \cup S_2 = (V_1 \cup V_2, E_1 \cup E_2)</m>を<m>S_1</m>と<m>S_2</m>の<dfn en="union">合併</dfn>という。<m>V_1 \cap V_2 \ne \emptyset</m>ならば、<m>S_1 \cup S_2</m>はシステムである。</li>
					<li><m>S_1 \cap S_2 = (V_1 \cap V_2, E_1 \cap E_2)</m>を<m>S_1</m>と<m>S_2</m>の<dfn en="intersection">共通部分</dfn>という。<m>S_1, S_2</m>がシステムなら<m>S_1 \cap S_2</m>はシステムである。</li>
				</ul>
				同様にして、3つ以上のシステムの合併や共通部分も定義する。
			</statement>
		</definition>
		<p>構造主義に基づく分析では、還元主義では分析しにくい要素間の関係、つまり相互作用を考慮するため、複数の要素が密接に関係し合う、ネットワークや社会の分析に適している。
		一方で、要素間にある関係が明確でない場合や、関係の種類や形式が多様である場合が多く、現実で生じる現象をシステムとして表すのが難しい場合がある。</p>
	</section>

	<section xml:id="sec-sys-dynamic">
		<title>システムの時間発展</title>
		<introduction>
			<p>時間の経過により、システムの要素が新たに生み出されたり、要素の間に新たな関係が生じたりして、構造が<dfn en="dynamic" strong="0">動的</dfn>に変化する。
			このように<em>システムが自律的に作動し、自身で変化</em>していく性質を<dfn en="autopoiesis">オートポイエーシス</dfn>または<dfn>自己創発</dfn>という<xref ref="bib-maturana-j"/><xref ref="bib-kawamoto"/>。</p>
		</introduction>

		<subsection xml:id="ssec-sys-state">
			<title>状態</title>
			<p>それぞれの時刻でのシステムの構造を、そのシステムの<dfn en="state">状態</dfn>という。</p>
			<definition>
				<title>状態</title>
				<statement>
					ある<em>時刻<m>t</m>におけるシステム<m>S</m>の構造</em>を、<m>S</m>の時刻<m>t</m>における<dfn en="state">状態</dfn>といい、<m>S(t) = (V(t), E(t))</m>と表す。
					ここで<m>V(t), E(t)</m>はそれぞれ、<m>S(t)</m>の要素の集合と構造である。
					最初の時刻、即ち時刻0におけるシステムの状態<m>S(0)</m>を、システム<m>S</m>の<dfn en="initial state">初期状態</dfn>という。
					またシステムの状態が一定になり、もはや変化しなくなったとき、その状態を<dfn>定常状態</dfn>という。
					<!-- むしろ、システムの状態が変化することを、時間が経過したと呼ぶこともできる。-->
				</statement>
			</definition>
			<p>システムは要素の集合<m>V</m>と構造<m>E</m>の組<m>(V, E)</m>であるから、システムの状態が変化すると、<m>V</m>か<m>E</m>の少なくとも一方が変化する。
			<m>V</m>に新たな要素<m>v</m>が生じたとき、システムの定義より、<m>v</m>と他の要素<m>v_k (\in V)</m>との関係<m>(v, v_k) (\in E)</m>も同時に生じる。
			一方、<m>V</m>から要素<m>v</m>が消えたとき、システムの定義より、<m>v</m>と他の要素<m>v_k (\in V)</m>との関係<m>(v, v_k) (\in E)</m>も同時に消える。
			従って、<strong>システム<m>(V, E)</m>の状態が変化することは、システムの構造<m>E</m>が変化することと同値</strong>であり、構造の変化についてのみ議論すればよい。</p>
			<p>システムの構造が変化して状態が変化することを、<dfn en="autopoiesis">オートポイエーシス</dfn>または<dfn>自己創発</dfn>という。</p>
			<definition>
				<title>オートポイエーシス</title>
				<statement>
					時刻<m>t = T</m>において<m>S(T-1) \ne S(T)</m>となるとき、システム<m>S</m>は<m>t = T</m>において<dfn en="autopoiesis">オートポイエーシス</dfn>が生じた、または<dfn>自己創発</dfn>したという。
				</statement>
			</definition>
			<note>
				<title>力学系</title>
				<statement>
					<p>システムにおける動的な構造の変化を強調して、システムを<dfn en="dynamical system" strong="0">力学系</dfn>や<dfn en="complex system">複雑系</dfn>ということがある。
					この「力学」はdynamicalの訳語であり、物理における「力学」との直接的な関係はない。</p>
					<p>力学系では、状態を<m>n</m>個の変数<m>x_1, \cdots, x_n</m>で表せると仮定する。
					状態の変化を<m>n</m>個の関数<m>f_1, \cdots, f_n</m>で表せるとしたとき、力学系は次の<m>n</m>個の微分方程式で表される。</p>
					<me>\frac{d}{dt} x_i = f_i(x_1, \cdots, x_n, t) (i = 1, \cdots, n)</me>
					<p>力学系は、初期状態の微小な差が系全体の挙動に影響するバタフライ効果など、カオス理論の基礎になっている。</p>
				</statement>
			</note>
		</subsection>

		<subsection xml:id="ssec-sys-close">
			<title>閉鎖性</title>
			<p>円という点の集合が円周を境界に持つように、システムもまた<dfn>境界</dfn>をもつ。
			例えば、学級という組織はその学級に所属している生徒からなるシステムであり、他学級の生徒はその外部にある。
			このように、あるシステムの<em>境界の外部</em>を、そのシステムの<dfn>環境</dfn>という。</p>

			<p>システムは、その境界の外側、つまり環境から影響されるかどうかにより、開放系、半閉鎖系、閉鎖系に分類できる。
			ガラパゴス諸島の生態系のように、<em>環境の影響を受けないシステム</em>を<dfn en="closed system">閉鎖系</dfn>という。
			一方、入力に従って処理を行う情報システムのように、<em>環境の影響を受けるシステム</em>を<dfn en="open system">開放系</dfn>という。</p>
			<p>開放系は更に、<em>間接的に</em>環境から影響を受けるが、環境から直接影響を及ぼすことができない<dfn en="semi-closed system">半閉鎖系</dfn>と、直接的に環境から影響を受ける通常の開放系に分類できる。
			半閉鎖系は、システムの<em>内部から外部を観察し、外部の変化に反応</em>することで、間接的に環境の影響を受ける。
			内部からの観察や反応がなければ、外部からどれだけ強い刺激を与えても、半閉鎖系のシステムに影響を及ぼすことはできない。
			また内部から反応がありシステムが変化した場合も、その反応が外部から与えた刺激の通りのものになるとは限らない。</p>
			<p>図<xref ref="fig-system-2d-open"/>、図<xref ref="fig-system-2d-semiclosed"/>、図<xref ref="fig-system-2d-closed"/>に、システムを閉鎖性により分類して示した。
			図では、システムを円で、システムの境界を円周で表している。
			外部の影響を受ける開放系(図<xref ref="fig-system-2d-open"/>、図<xref ref="fig-system-2d-semiclosed"/>)は点線で、外部の影響を受けない閉鎖系(図<xref ref="fig-system-2d-closed"/>)は実線とした。
			また、システムが時間の経過と共に変化することを、境界に三角を付して表した。</p>
			<sidebyside width="15%">
				<figure xml:id="fig-system-2d-open">
					<image source="image/system-2d-open"/>
					<caption>開放系</caption>
				</figure>
				<figure xml:id="fig-system-2d-semiclosed">
					<image source="image/system-2d-semiclosed"/>
					<caption>半閉鎖系</caption>
				</figure>
				<figure xml:id="fig-system-2d-closed">
					<image source="image/system-2d-closed"/>
					<caption>閉鎖系</caption>
				</figure>
			</sidebyside>

			<p>図<xref ref="fig-autopoiesis-open"/>、図<xref ref="fig-autopoiesis-semiclosed"/>、図<xref ref="fig-autopoiesis-closed"/>に、閉鎖性によるオートポイエーシスの違いを示す。
			外部の影響を受ける開放系(図<xref ref="fig-autopoiesis-open"/>)では、外部の変化によりシステムの状態が変化し、次の状態が決まる。
			半閉鎖系(図<xref ref="fig-autopoiesis-semiclosed"/>)では、外部が変化しても直接影響を受けることはないが、システム内部から外部の変化を観察することで外部の影響を受け、次の状態が変化することがありうる。
			閉鎖系(図<xref ref="fig-autopoiesis-closed"/>)は外部から影響を受けないため、外部で生じた変化の影響を受けてシステム内部の状態が変化することはない。</p>
			<sidebyside width="15%">
				<figure xml:id="fig-autopoiesis-open">
					<image source="image/system-autopoiesis-open"/>
					<caption>開放系</caption>
				</figure>
				<figure xml:id="fig-autopoiesis-semiclosed">
					<image source="image/system-autopoiesis-semiclosed"/>
					<caption>半閉鎖系</caption>
				</figure>
				<figure xml:id="fig-autopoiesis-closed">
					<image source="image/system-autopoiesis-closed"/>
					<caption>閉鎖系</caption>
				</figure>
			</sidebyside>
		</subsection>
	</section>

	<section xml:id="sec-sys-eg">
		<title>システムの例</title>
		<introduction>
			<p>システムの例には生態系や生物の循環系、化学における反応系などがあるが、ここでは主に社会的なシステムに焦点を当て、心理システムと社会システムを例示する。
			これらは人間の社会を構成する基本的なシステムであり、いずれも半閉鎖系であることが特徴である。</p>
		</introduction>

		<subsection xml:id="ssec-sys-eg-psy">
			<title>心理システム</title>
			<p><dfn>心理システム</dfn>は<em>思考</em>を要素とするシステムである<xref ref="bib-kawamoto"/><xref ref="bib-bateson2"/>。
			<ruby r="デカルト">Descartes</ruby>が<q ref="bib-descartes-j">私は考える、ゆえに私はある</q>と述べたように<xref ref="bib-descartes"/><xref ref="bib-descartes-j"/>、心理システムは生命の<em>意識</em>ともいえる。</p>
			<p><dfn>思考</dfn>は、<em>送り手と受け手が同一であるコミュニケーション</em>である。
			Plátōnが<q ref="bib-platon">魂の内において音声を伴わずに、魂自身を相手に行われる<ruby r="ディアロゴス">対話</ruby></q><xref ref="bib-platon"/><xref ref="bib-platon-e"/>を思考と呼んでいるように、人間の思考では、思考が「ひとりごと」として表出するか否かにかかわらず、記号が使われる(<dfn>シンボル機能</dfn>)<xref ref="bib-bertalanffy"/>。
			特に母語は人間の思考様式に大きな影響を及ぼしており、<em>母語が異なれば思考様式が異なりうる</em>。
			これは、人間の思考様式が普遍的に同じであることを否定するものであり、<dfn>言語相対仮説</dfn>や<dfn>Sapir-Whorf仮説</dfn>と呼ばれる<xref ref="bib-whorf"/><xref ref="bib-sapir"/>。</p>
			<p>心理システムは知的な生命を構成する最も基本的なシステムである。
			連続的な思考の積み重ねは思考間の関連を生み出し、心理システムの構造を形成する。
			こうして形成された構造がそのシステムにとっての<em>世界</em>であり、そのシステムが持つ<em>現実イメージ</em>である。
			この「世界」や「現実イメージ」が実際の現実と異なっていることは、<xref ref="sec-media-influence"/>節で述べた通りである。</p>
			<p>心理システムの思考は、誤りが生じぬよう、論理的で合理的であることを志向して展開される。
			だが、現実イメージは現実の一部分を捉えたものでしかなく、しかも実際の現実とも異なる。
			そのため、心理システムにおける思考は、決して完璧に正しいとはいえず、最適な判断ができるわけでもない。
			こうした、<em>ある限定された範囲までの合理性しかない</em>性質を<dfn>限定合理性</dfn>という<xref ref="bib-simon"/>。</p>
			<p>心理システムを構成する思考には、システムの外部から直接に影響を与えることはできない。
			システムの外部、即ち環境が人間の思考に影響を与えられるのは、ただ人間が環境を観察し、それに反応したときのみである。
			例えば、ある人間の肉体にどれほど強い攻撃を加えても、その人間の精神が攻撃に屈しない限り、その人間の思考を束縛することはできない。
			従って、<em>心理システムは半閉鎖系</em>である。</p>
		</subsection>

		<subsection xml:id="ssec-sys-eg-soc">
			<title>社会システム</title>
			<p>心理システムがもつ限定合理性を克服するため、生命は他の生命と合同し、より大きな集団を形成する。
			その集団内でコミュニケーションを行ってお互いの限定合理性を補い合い、より完全な合理性を手に入れようとする<xref ref="bib-kuwata"/>。
			このようにして形成される<dfn>社会システム</dfn>は<em>コミュニケーション</em>を要素とするシステムであり、<dfn>組織</dfn>とも呼ばれる<xref ref="bib-barnard"/><xref ref="bib-simon"/>。
			生命が互いに連携して社会を構成するためには、社会システムの存在が不可欠である。</p>
			<p>社会システムは、そこに形式上所属する人間ではなく、そこで行われるコミュニケーションが要素となる<xref ref="bib-borch"/>。
			例えば、ある学級に形式上は所属していても、そこで行われるコミュニケーションに一切参加しなければ、社会システムとしての学級に関与しているといえない。
			逆に、その学級に所属していなくとも、そこでのコミュニケーションに参加していれば、社会システムとしての学級に関与しているといえる。</p>
			<p>社会システムには、その要素である<em>コミュニケーションを支える、固有の成果メディアが存在</em>する。
			特定の企業などの場合、この成果メディアは<dfn en="corporate culture">組織文化</dfn>と呼ばれ、組織のコミュニケーションを円滑にする。
			組織文化が通用する範囲が組織の内側であり、組織文化が通用しなくなる外側との間に境界が発生し、組織の一体感が生じる源泉ともなる。</p>
			<p><xref ref="ssec-media-soc"/>節で示した、より一般的な成果メディアに対しても、それぞれが通用する社会システムが存在する。
			例えば、<em>真理</em>は学会や学術システムが、<em>愛</em>は家族や血縁に基づくシステムが、<em>貨幣</em>は市場などの経済システムが、<em>法</em>は裁判所や司法システムが、<em>権力</em>は自治体や官庁などの政治システムが、<em>宗教</em>には教団が、<em>芸術</em>にはパトロンやファン組織が対応する。</p>
			<p>社会システムは個々の心理システムが関与して存在しているため、心理システムがもつ特徴を継承している。
			まず、<em>社会システムは限定合理性をもつ</em>。
			元になる心理システムが限定合理性をもつ以上、それらのコミュニケーションから構成される社会システムがもつ合理性もまた、限定的である。</p>
			<p>また、心理システムの思考と同様に、社会システムのコミュニケーションも、外部から影響を与えることは難しい。
			たとえ企業が倒産したり、国がなくなったとしても、それらに関するコミュニケーションには直接、影響を及ぼすことができない。
			従って、<em>社会システムは半閉鎖系</em>である。</p>

			<note>
				<title>実体関連モデルと関係データベース</title>
				<statement>
					<p>コンピュータで情報をデータとして蓄積し、利用できるようにしたものを<dfn en="database">データベース</dfn>(<dfn>DB</dfn>)といい、データベースを管理するためのシステムを<dfn en="database management system">データベース管理システム</dfn>(<dfn>DBMS</dfn>)という。
					DBMSでは、DBの情報の追加・削除を行うことや、DBから情報を検索し読み出すことができる。</p>
					<p>現在広く使われるDBの大半が、Codd<xref ref="bib-codd"/>の提案に基づく<dfn en="relational database">関係データベース</dfn>(<dfn>RDB</dfn>)と呼ばれる種類のDBであり、RDBの管理システムを<dfn en="RDBMS">関係データベース管理システム</dfn>という。
					このRDBの設計には、Chenによる<dfn en="Entity-Relationship model">実体関連モデル</dfn>(<dfn>E-Rモデル</dfn>)<xref ref="bib-chen-er"/>と呼ばれるモデルが使われる。
					E-Rモデルでは、DBの作成対象を<dfn en="entity">実体</dfn>と、実体間の<dfn en="relationship">関連</dfn>と捉え、実体や関連を属性付きで蓄積したDBをそれぞれ作成し、個々のDBを関連付けて管理する。</p>
				</statement>
			</note>
		</subsection>
	</section>

	<section xml:id="sec-sys-decompose">
		<title>システムの分割</title>
		<p>システムにおいても、集合と同様に、分割を定義することを考える。
		「相互に関連する」というシステムの定義より、そのままでは分割できないことは明らかである。
		もしシステムの中に分割可能な部分が存在すれば、その部分はシステムの他の部分と関連していないため、システムの定義に反している。</p>
		<proposition>
			<title>システムの連結性</title>
			<statement>
				システム<m>(V, E)</m>は<dfn>連結</dfn>である。
				つまり、グラフ<m>(V, E)</m>の任意の2要素<m>v_i, v_j (\in V)</m>に対して、<m>v_i</m>から<m>v_j</m>まで辿る枝が存在する。
			</statement>
		</proposition>

		<p>Simonは、システム内部の要素間の関連性には強弱があり、互いに強い関連性をもつ部分と、互いに弱い関連性しかもたない部分があることに着目した<xref ref="bib-simon2"/>。
		システム<m>S_i = (V_i, E_i) (i = 1, \cdots, n)</m>について、<m>S = S_1 \cup \cdots \cup S_n</m>となるとき、「互いに弱い関連性しかもたない」とは、任意の<m>i, j (= 1, \cdots, n)</m>について<m>S_i \cap S_j ≒ (\emptyset, \emptyset)</m>が成り立つことである。
		Simonはこうしたシステム<m>S</m>は<dfn en="nearly decomposable">準分解可能</dfn>だといい、<m>S_1, \cdots, S_n</m>を<m>S</m>の<dfn en="subsystem">部分システム</dfn>と呼んだ。
		準分解可能なシステムでは、システムを複数の部分システムに分解しても、失われる創発性は無視できるほど小さいものとみなせる。</p>
		<!--TODO: 分割/準分解の図-->
		<definition>
			<title>システムの準分解</title>
			<statement>
				システム<m>S = (V, E)</m>の隣接行列を<m>\epsilon = \{e_{ij} \}</m>と定義する。
				ここで<m>e_{ij}</m>は、関係<m>(v_i, v_j)</m>の強さを表す非負の実数である。
				あるしきい値<m>\tau</m>をとり、「<m>e_{ij} \leq \tau</m>なら<m>e_{ij} = 0</m>」とみなすことで<m>S</m>を<m>S_1, \cdots, S_n</m>に分割できるとする。
				このとき、システム<m>S</m>はしきい値<m>\tau</m>で<m>S_1, \cdots, S_n</m>に<dfn en="nearly decomposable">準分解可能</dfn>だといい、<m>S = S_1 \sqcup \cdots \sqcup S_n</m>と表す。
				また、<m>S_1, \cdots, S_n</m>を<m>S</m>の<dfn en="subsystem">部分システム</dfn>といい、<m>S_i \subset S</m>と表す。
			</statement>
		</definition>
	</section>

	<section xml:id="sec-sys-autopoiesis">
		<title>オートポイエーシスの影響</title>
		<p>システムにおいて、<em>オートポイエーシスはそのシステムの機能や特徴を強める</em>方向に作用する<xref ref="bib-borch"/>。
		例えば心理システムの場合、オートポイエーシスにより思考が深化することで、その個人の思想や信条として固定化していく。</p>
		<p>社会システムの場合には、オートポイエーシスにより<em>組織の各部分がその機能や特性を強めた結果、組織全体の関係が薄くなり、組織の各部分がより専門的な組織として分かれ</em>ていく。この現象を、その社会の<dfn>機能的分化</dfn>という。</p>
		<definition>
			<title>システムの機能的分化</title>
			<statement>
				システム<m>S</m>に時刻<m>t = T</m>で生じたオートポイエーシスにより、<m>S(T) = S_1(T) \sqcup S_2(T)</m>と準分解できるようになったとする。
				このとき、システム<m>S</m>は時刻<m>t = T</m>で<m>S_1</m>と<m>S_2</m>に<dfn>機能的分化</dfn>したという。
			</statement>
		</definition>
		<!-- TODO: 機能的分化の図 -->
		<p>社会システムである組織の場合は、ある組織内のルールが成果メディアとして働くと、そのルールはより強固なものとなり、他の組織との差異を増大させる。
		例えば、陸上部には陸上部のルールが存在する。
		陸上部の部員がそのルールに従いながらも少しずつ変化させていくことにより、陸上部の独自性が増す。
		バスケ部にはバスケ部の、吹奏楽部には吹奏楽部の文化や伝統が存在し、時間を経るごとにその独自性や特異性は増していく。</p>
		<p>社会の機能的分化は、その社会に属する組織の高度化や専門化を促進する。
		例えば、大学院の研究室では、他大学の同系列の研究室とも違う、より専門的な学問が醸成される。
		その結果、その研究室で研究される内容はより高度なものになり、また専門的なものになっていく。</p>
	</section>
</chapter>
