<?xml version="1.0" encoding="utf-8"?>
<chapter xml:id="ch-problem">
	<title>問題</title>
	<introduction>
		<p>本章では、人間の周囲にある問題に着目し、問題を解決する代表的な方法を説明する。</p>
		<p><xref ref="sec-problem-bg"/>節では、人間の周囲にある対象の複雑さについて述べる。
		<xref ref="sec-problem-def"/>節では問題とその解決を定義し、問題解決の一般的な手順を述べる。
		<xref ref="sec-problem-approach"/>節で問題解決の基本的な方針として還元主義、構造主義、創発主義を示し、これらを比較する。</p>
	</introduction>

	<section xml:id="sec-problem-bg">
		<title>複雑性と問題</title>
		<p>人間の周囲に存在する現象や対象には、その原理や性質が未知のものが数多く存在する。
		こうした未知のものは、原理や性質が明らかでないという意味で、<dfn en="complex">複雑</dfn>である、または<dfn en="complexity">複雑性</dfn>があるという。
		複雑性のないものは、既に原理や性質が明らかになっているという意味で、<dfn en="simple">単純</dfn>であるという。</p>
		<p>複雑な対象に対して説明を与え、未知の対象を理解できるようにすることで、人間は周囲の世界に対する理解を深め、より良い生活を送ることができる。
		そのため人間は、未知の対象が存在することを「問題」とみなして分析の対象とし、分析により得られた、世界の現象を説明する知識の全体を<dfn en="science">科学</dfn>と呼んだ。</p>
	</section>

	<section xml:id="sec-problem-def">
		<title>問題の定義</title>
		<p>ここでは、Simon<xref ref="bib-simon2"/>による問題の定義を示し、図<xref ref="fig-problem"/>に、問題とその解の関係を示す。</p>

		<definition>
			<title>問題</title>
			<statement>
				<dfn strong="0" en="To-Be">目標とする状態</dfn>と<dfn strong="0" en="As-Is">現在の状態</dfn>の間に<em>差</em>があるとき、この差を<dfn en="problem">問題</dfn>という<xref ref="bib-simon2"/>。
				<em>現在の状態から目標とする状態に至る方法を見つける</em>ことを<dfn en="problem solving">問題解決</dfn>といい、この方法をその問題の<dfn en="solution">解</dfn>という<xref ref="bib-newell"/>。
			</statement>
		</definition>

		<figure xml:id="fig-problem">
			<image source="image/problem" width="25%"/>
			<caption>問題の定義</caption>
		</figure>

		<p>問題に対する解は一つしか存在しないとは限らず、複数存在することもある。
		そのうち一つでも解を発見できれば問題解決は達成されるが、簡単に見つかる解は実行に非常に長い時間を要したり、膨大な資本が必要となったり、実現が困難であることが多い。
		多数ある解のうち、より効果的で実現できる解を見つけることが重要となる。</p>
		<p>一般的な問題解決は、次の手順で行われる。
		但し、常にこの順番で進むわけではなく、各段階において、前段階で行う内容が不十分だと分かった場合には、必要に応じて1つ以上前の段階に戻ることがある。</p>
		<ol>
			<li><dfn en="problem definition">問題定義</dfn>:
				対象とする問題の<em>目標とする状態</em>と<em>現在の状態</em>を明確かつ簡潔に示す。</li>
			<li><dfn en="investigation">現状の調査</dfn>:
				問題が現在どのような状態になっているかを、具体的に<em>調査</em>する。</li>
			<li><dfn en="analysis">構造分析</dfn>:
				問題における諸要素の関連性(<em>構造</em>)を<dfn en="model">モデル</dfn>として明示し、目標とする状態と現在の状態に差がある<em>原因</em>を明らかにする。</li>
			<li><dfn en="proposal">解の提案</dfn>:
				明らかになった問題の原因を取り除く<em>アイデア</em>を<em>提案</em>する。</li>
		</ol>
	</section>

	<section xml:id="sec-problem-approach">
		<title>問題解決の方針</title>
		<p>問題解決の方針としては、次の3つが基本的である。</p>
		<ul>
			<li><dfn>還元主義</dfn>: 複雑な対象を何らかの基準に従って<em>より単純な複数の要素に分割</em>し、<em>個々の要素を分析</em>して対象を説明する。</li>
			<li><dfn>構造主義</dfn>: 複雑な対象を何らかの基準に従って<em>より単純な複数の要素に分割</em>し、<em>要素間の関係を分析</em>して対象を説明する。</li>
			<li><dfn>創発主義</dfn>: 複雑な対象を<em>要素に分割せず</em>、<em>対象全体を分析</em>して対象を説明する。</li>
		</ul>
		<!-- TODO: 3種類の方針を比較する図 -->

		<p>還元主義、構造主義、創発主義の方針を比較して表<xref ref="table-problem-compare"/>に示す。</p>
		<table xml:id="table-problem-compare">
			<caption>還元主義、構造主義、創発主義の比較</caption>
			<tbody>
				<tr><th>方針</th><th>還元主義</th><th>構造主義</th><th>創発主義</th></tr>
				<tr><th>モデル</th><td>集合</td><td>システム</td><td>-</td></tr>
				<tr>
					<th>利点</th>
					<td>より小さい対象を分析できる</td>
					<td>要素間の関係を分析できる</td>
					<td>未知の部分が多くても分析できる</td>
				</tr>
				<tr>
					<th>欠点</th>
					<td>適切な分割を行う必要がある</td>
					<td>関係を明確に表現できないことがある</td>
					<td>非科学的になりやすい</td>
				</tr>
			</tbody>
		</table>

		<!--
		<p>準分解可能なシステムは、最も上位のシステムから下位の部分システムに枝分かれしていく<dfn en="tree">木構造</dfn>のグラフで表せるため、木構造を順に辿って解を探す、<dfn en="search">探索</dfn>を行うことも多い。
		探索は場合の数の数え上げなど日常的に使う他、囲碁や将棋、チェスなどの機械によるゲームプレイで、次の手を決めるために使うこともある。</p>-->

		<note>
			<title>探索</title>
			<statement>
				<p>ある問題の解を求める最も単純な方法は、考えうるすべての組み合わせを総当たりで試す<dfn>全数探索</dfn>である。
				特に、暗号の解読や認証の通過を目的に行う全数探索は、<dfn en="brute-force attack">総当たり攻撃</dfn>と呼ばれる。
				全数探索は単純で古典的だが、解の範囲がある程度限定される場合には、人手でも行える他、コンピュータを使って機械的にも行えるため、十分有効な方法である。</p>
				<p>全数探索のうち、一つの場合に注目してより<em>深く</em>探索する<dfn>深さ優先</dfn>探索は、注目した部分に解が含まれる場合は高速に解を発見できるが、注目した部分に解が含まれない場合は探索に長時間を要する。
				深さ優先探索は特定の場合を深めることから、垂直思考と類似している。</p>
				<p>また、複数の場合を順に調べてより<em>広く</em>探索する<dfn>幅優先</dfn>探索は、解が比較的浅い部分にある場合は高速に解を発見できるが、解が深い部分にある場合は探索に長時間を要する。
				幅優先探索は多数の場合を検討することから、水平思考と類似している。</p>
				<p>実用上は、深さ優先と幅優先を組み合わせた方法や、評価関数に基づいて次に探索すべき部分を決定する方法などが使われる。
				また、すべての場合を検討するのではなく、<em>確率的に場合を選択</em>し、選択した場合のみを検討する<dfn>Monte Carlo法</dfn>などもよく使われる。<br/>
				<figure xml:id="fig-search">
					<image source="image/search" width="50%"/>
					<caption>探索と水平思考・垂直思考</caption>
				</figure></p>
			</statement>
		</note>
	</section>
</chapter>
